@use "sass:map";
@use "theme";
@use "functions";

* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

body {
	background-color: map.get(theme.$colors, main);
	color: map.get(theme.$colors, white);
}

.content-wrapper {
	display: flex;

	width: clamp(functions.rem(768), 90vw, functions.rem(1280));
	margin-left: auto;
	margin-right: auto;
	padding-left: 1.5rem;
	padding-right: 1.5rem;

	&.bigger {
		width: clamp(functions.rem(768), 90vw, functions.rem(1560));
	}
}

.background-wrapper-fixed {
	display: flex;

	position: absolute;

	z-index: -1;

	width: 100%;
	height: 100%;

	.mirror {
		position: absolute;

		z-index: 2;

		width: 100%;
		height: 200%;

		backdrop-filter: saturate(1.25) blur(functions.rem(35)) opacity(0.9);
	}

	.content {
		position: absolute;

		z-index: 1;

		background-color: map.get(theme.$colors, main);

		width: 100%;
		height: 100%;

		img {
			position: absolute;

			object-fit: cover;
			width: functions.rem(500);
			height: auto;

			&:nth-of-type(1) {
				transform: rotate3d(0, 0, 1, 0deg) scale3d(1, 1, 1);
				top: 12.5%;
				left: 7.5%;

				animation: rotate-blob-1 5000ms linear infinite;
			}

			&:nth-of-type(2) {
				transform: rotate3d(0, 0, 1, 180deg);
				right: 7.5%;
				top: 85%;

				@media (max-width: 700px) {
					right: unset;
					left: 7.5%;
				}

				animation: rotate-blob-2 5000ms linear infinite;
			}
		}
	}
}

@keyframes rotate-blob-1 {
	0% {
		transform: rotate3d(0, 0, 1, 0deg) scale3d(1, 1, 1);
	}
	50% {
		transform: rotate3d(0, 1, 0, -7deg) scale3d(1.1, 1.1, 1.1);
	}
	100% {
		transform: rotate3d(0, 0, 1, 0deg) scale3d(1, 1, 1);
	}
}

@keyframes rotate-blob-2 {
	0% {
		transform: rotate3d(0, 0, 1, 0deg) scale3d(1, 1, 1);
	}
	50% {
		transform: rotate3d(0, 1, 0, -15deg) scale3d(1.1, 1.1, 1.1);
	}
	100% {
		transform: rotate3d(0, 0, 1, 0deg) scale3d(1, 1, 1);
	}
}

.skeleton {
	display: flex;
	justify-content: end;
	align-items: center;

	overflow: hidden;
	position: absolute;

	width: 100%;
	height: 100%;

	background-color: rgb(143, 143, 143);

	// animation-fill-mode: forwards;

	&::before {
		content: "";

		height: 200%;
		width: 300%;

		position: absolute;

		background: linear-gradient(
			90deg,
			rgb(143, 143, 143) 0%,
			rgb(195, 195, 195) 50%,
			rgb(143, 143, 143) 100%
		);

		animation: skeleton 4000ms infinite cubic-bezier(0.455, 0.03, 0.515, 0.955);
		animation-fill-mode: both;
	}
}

@keyframes skeleton {
	0% {
		transform: translate3d(0, 0, 0);
	}
	50% {
		transform: translate3d(66%, 0, 0);
	}
	100% {
		transform: translate3d(0, 0, 0);
	}
}

divider-horizontal {
	display: flex;

	width: 100%;
	height: functions.rem(3);
	background-color: map.get(theme.$colors, white);
}
